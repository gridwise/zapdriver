name: build
on:
  push:
    branches:
      - master
      - main
    tags:
      - v*
  pull_request:

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ 1.17.x ]
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0 -E bodyclose -E cyclop -E dupl -E gocognit -E goconst -E gocyclo -E godot -E gofmt -E gosec -E misspell -E whitespace

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.17' ]
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests
        uses: n8maninger/action-golang-test@v1
        with:
          args: "-v;-covermode=atomic;-coverprofile=coverage.out"

      - uses: codecov/codecov-action@v2
        with:
          files: ./coverage.out # optional